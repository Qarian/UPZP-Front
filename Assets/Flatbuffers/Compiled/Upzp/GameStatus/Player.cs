// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Upzp.GameStatus
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

/// Player
public struct Player : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Player GetRootAsPlayer(ByteBuffer _bb) { return GetRootAsPlayer(_bb, new Player()); }
  public static Player GetRootAsPlayer(ByteBuffer _bb, Player obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Player __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public uint Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public int Points { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Upzp.GameStatus.Position? Position { get { int o = __p.__offset(10); return o != 0 ? (Upzp.GameStatus.Position?)(new Upzp.GameStatus.Position()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Upzp.GameStatus.Vehicle Vehicle { get { int o = __p.__offset(12); return o != 0 ? (Upzp.GameStatus.Vehicle)__p.bb.GetSbyte(o + __p.bb_pos) : Upzp.GameStatus.Vehicle.Pedestrian; } }

  public static void StartPlayer(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(1, id, 0); }
  public static void AddPoints(FlatBufferBuilder builder, int points) { builder.AddInt(2, points, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<Upzp.GameStatus.Position> positionOffset) { builder.AddStruct(3, positionOffset.Value, 0); }
  public static void AddVehicle(FlatBufferBuilder builder, Upzp.GameStatus.Vehicle vehicle) { builder.AddSbyte(4, (sbyte)vehicle, 0); }
  public static Offset<Upzp.GameStatus.Player> EndPlayer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // name
    builder.Required(o, 10);  // position
    return new Offset<Upzp.GameStatus.Player>(o);
  }
};


}
