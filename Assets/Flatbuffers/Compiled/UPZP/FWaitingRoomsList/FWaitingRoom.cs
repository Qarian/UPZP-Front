// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace UPZP.FWaitingRoomsList
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct FWaitingRoom : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FWaitingRoom GetRootAsFWaitingRoom(ByteBuffer _bb) { return GetRootAsFWaitingRoom(_bb, new FWaitingRoom()); }
  public static FWaitingRoom GetRootAsFWaitingRoom(ByteBuffer _bb, FWaitingRoom obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FWaitingRoom __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string City { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCityBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetCityBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCityArray() { return __p.__vector_as_array<byte>(6); }
  public string Host { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHostBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetHostBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetHostArray() { return __p.__vector_as_array<byte>(8); }
  public int ClientsLogged { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClientsMax { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Status { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<UPZP.FWaitingRoomsList.FWaitingRoom> CreateFWaitingRoom(FlatBufferBuilder builder,
      int id = 0,
      StringOffset cityOffset = default(StringOffset),
      StringOffset hostOffset = default(StringOffset),
      int clientsLogged = 0,
      int clientsMax = 0,
      int status = 0) {
    builder.StartTable(6);
    FWaitingRoom.AddStatus(builder, status);
    FWaitingRoom.AddClientsMax(builder, clientsMax);
    FWaitingRoom.AddClientsLogged(builder, clientsLogged);
    FWaitingRoom.AddHost(builder, hostOffset);
    FWaitingRoom.AddCity(builder, cityOffset);
    FWaitingRoom.AddId(builder, id);
    return FWaitingRoom.EndFWaitingRoom(builder);
  }

  public static void StartFWaitingRoom(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddCity(FlatBufferBuilder builder, StringOffset cityOffset) { builder.AddOffset(1, cityOffset.Value, 0); }
  public static void AddHost(FlatBufferBuilder builder, StringOffset hostOffset) { builder.AddOffset(2, hostOffset.Value, 0); }
  public static void AddClientsLogged(FlatBufferBuilder builder, int clientsLogged) { builder.AddInt(3, clientsLogged, 0); }
  public static void AddClientsMax(FlatBufferBuilder builder, int clientsMax) { builder.AddInt(4, clientsMax, 0); }
  public static void AddStatus(FlatBufferBuilder builder, int status) { builder.AddInt(5, status, 0); }
  public static Offset<UPZP.FWaitingRoomsList.FWaitingRoom> EndFWaitingRoom(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<UPZP.FWaitingRoomsList.FWaitingRoom>(o);
  }
};


}
